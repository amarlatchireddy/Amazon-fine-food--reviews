{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"amazon_navie_bayes","version":"0.3.2","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"PCCV7_3SYpjT","colab_type":"code","outputId":"8c3ed648-7d81-4566-81ed-95df4e7c01fa","executionInfo":{"status":"ok","timestamp":1557942075405,"user_tz":-330,"elapsed":5294,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["!cwd"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/bin/bash: cwd: command not found\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5RVnTZYOY3pU","colab_type":"code","outputId":"8e9d2e41-a1ca-428e-b6cc-facf097e0e82","executionInfo":{"status":"ok","timestamp":1557942075409,"user_tz":-330,"elapsed":5257,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd ..\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"njJsDLhZZMCS","colab_type":"code","outputId":"835acf8d-3dc4-4ee2-f6d7-170af7c99307","executionInfo":{"status":"ok","timestamp":1557942078640,"user_tz":-330,"elapsed":8460,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["mkdir root/.kaggle"],"execution_count":0,"outputs":[{"output_type":"stream","text":["mkdir: cannot create directory ‘root/.kaggle’: File exists\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Xjt9MA3_Zasf","colab_type":"code","colab":{}},"source":["api_token = {\"username\":\"amarlatchireddy\",\"key\":\"d1927120ebdf3ead33a9cda469c43340\"}\n","import json\n","import os\n","with open('/root/.kaggle/kaggle.json', 'w') as file:\n","    json.dump(api_token, file)\n","!chmod 600 /root/.kaggle/kaggle.json"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NHrDr7svZftv","colab_type":"code","outputId":"0c7d9321-e0ae-4b0d-96ed-34740923bdf5","executionInfo":{"status":"ok","timestamp":1557942085745,"user_tz":-330,"elapsed":15510,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["mkdir amazon_navie_bayes"],"execution_count":0,"outputs":[{"output_type":"stream","text":["mkdir: cannot create directory ‘amazon_navie_bayes’: File exists\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tnyDqP39Zndb","colab_type":"code","outputId":"8704c61a-06b2-4288-cd13-ac8ecc4039ec","executionInfo":{"status":"ok","timestamp":1557942085748,"user_tz":-330,"elapsed":15478,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["cd amazon_navie_bayes"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/amazon_navie_bayes\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tqLr13ECZuOT","colab_type":"code","outputId":"d07a1451-9584-4059-918d-f72538e67135","executionInfo":{"status":"ok","timestamp":1557942089075,"user_tz":-330,"elapsed":18770,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["!kaggle datasets download -d snap/amazon-fine-food-reviews"],"execution_count":0,"outputs":[{"output_type":"stream","text":["amazon-fine-food-reviews.zip: Skipping, found more recently modified local copy (use --force to force download)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gva04UFSZuRa","colab_type":"code","outputId":"4d3daa00-9f1e-4b5a-a990-562c36faf6df","executionInfo":{"status":"ok","timestamp":1557942198789,"user_tz":-330,"elapsed":128445,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["!unzip amazon-fine-food-reviews"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Archive:  amazon-fine-food-reviews.zip\n","replace Reviews.csv? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n","replace database.sqlite? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n","replace hashes.txt? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"czkE_PdnW2oM","colab_type":"code","colab":{}},"source":["%matplotlib inline\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","\n","import sqlite3\n","import pandas as pd\n","import numpy as np\n","import nltk\n","import string\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.metrics import confusion_matrix\n","from sklearn import metrics\n","from sklearn.metrics import roc_curve, auc\n","from nltk.stem.porter import PorterStemmer\n","\n","import re\n","# Tutorial about Python regular expressions: https://pymotw.com/2/re/\n","import string\n","from nltk.corpus import stopwords\n","from nltk.stem import PorterStemmer\n","from nltk.stem.wordnet import WordNetLemmatizer\n","\n","from gensim.models import Word2Vec\n","from gensim.models import KeyedVectors\n","import pickle\n","\n","from tqdm import tqdm\n","import os"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GRZPgN16aKWk","colab_type":"code","outputId":"a30b5ec3-d771-4f7c-e34a-e29bf8d1ba59","executionInfo":{"status":"ok","timestamp":1557942204637,"user_tz":-330,"elapsed":134255,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":244}},"source":["#use sqlite3 to read table data\n","conn=sqlite3.connect('database.sqlite')\n","#taking the data which the score is not equal to three\n","filtered_data = pd.read_sql_query(\"\"\" SELECT * FROM Reviews WHERE Score != 3 LIMIT 500000\"\"\", conn)\n","#giving the review which is less than 3 as negative and greater than three as postive\n","def partition(x):\n","    if(x>3):\n","        return 1\n","    return 0\n","#changing the values of the scores\n","actual_score=filtered_data[\"Score\"]\n","positive_negative=actual_score.map(partition)\n","filtered_data[\"Score\"]=positive_negative\n","print(filtered_data.shape)\n","filtered_data.head(3)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["(500000, 10)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>ProductId</th>\n","      <th>UserId</th>\n","      <th>ProfileName</th>\n","      <th>HelpfulnessNumerator</th>\n","      <th>HelpfulnessDenominator</th>\n","      <th>Score</th>\n","      <th>Time</th>\n","      <th>Summary</th>\n","      <th>Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>B001E4KFG0</td>\n","      <td>A3SGXH7AUHU8GW</td>\n","      <td>delmartian</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1303862400</td>\n","      <td>Good Quality Dog Food</td>\n","      <td>I have bought several of the Vitality canned d...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>B00813GRG4</td>\n","      <td>A1D87F6ZCVE5NK</td>\n","      <td>dll pa</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1346976000</td>\n","      <td>Not as Advertised</td>\n","      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>B000LQOCH0</td>\n","      <td>ABXLMWJIXXAIN</td>\n","      <td>Natalia Corres \"Natalia Corres\"</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1219017600</td>\n","      <td>\"Delight\" says it all</td>\n","      <td>This is a confection that has been around a fe...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Id  ...                                               Text\n","0   1  ...  I have bought several of the Vitality canned d...\n","1   2  ...  Product arrived labeled as Jumbo Salted Peanut...\n","2   3  ...  This is a confection that has been around a fe...\n","\n","[3 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":202}]},{"cell_type":"code","metadata":{"id":"2dyd8Q4qcGkg","colab_type":"code","colab":{}},"source":["display = pd.read_sql_query(\"\"\"\n","SELECT UserId, ProductId, ProfileName, Time, Score, Text, COUNT(*)\n","FROM Reviews\n","GROUP BY UserId\n","HAVING COUNT(*)>1\n","\"\"\", conn)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XvXBIUx2OwL7","colab_type":"code","outputId":"1c5ae058-8045-4fe1-f08a-ac10ee3fcd09","executionInfo":{"status":"ok","timestamp":1557942208421,"user_tz":-330,"elapsed":137977,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":221}},"source":["print(display.shape)\n","display.head()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["(80668, 7)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>UserId</th>\n","      <th>ProductId</th>\n","      <th>ProfileName</th>\n","      <th>Time</th>\n","      <th>Score</th>\n","      <th>Text</th>\n","      <th>COUNT(*)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>#oc-R115TNMSPFT9I7</td>\n","      <td>B007Y59HVM</td>\n","      <td>Breyton</td>\n","      <td>1331510400</td>\n","      <td>2</td>\n","      <td>Overall its just OK when considering the price...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#oc-R11D9D7SHXIJB9</td>\n","      <td>B005HG9ET0</td>\n","      <td>Louis E. Emory \"hoppy\"</td>\n","      <td>1342396800</td>\n","      <td>5</td>\n","      <td>My wife has recurring extreme muscle spasms, u...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#oc-R11DNU2NBKQ23Z</td>\n","      <td>B007Y59HVM</td>\n","      <td>Kim Cieszykowski</td>\n","      <td>1348531200</td>\n","      <td>1</td>\n","      <td>This coffee is horrible and unfortunately not ...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#oc-R11O5J5ZVQE25C</td>\n","      <td>B005HG9ET0</td>\n","      <td>Penguin Chick</td>\n","      <td>1346889600</td>\n","      <td>5</td>\n","      <td>This will be the bottle that you grab from the...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>#oc-R12KPBODL2B5ZD</td>\n","      <td>B007OSBE1U</td>\n","      <td>Christopher P. Presta</td>\n","      <td>1348617600</td>\n","      <td>1</td>\n","      <td>I didnt like this coffee. Instead of telling y...</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               UserId  ... COUNT(*)\n","0  #oc-R115TNMSPFT9I7  ...        2\n","1  #oc-R11D9D7SHXIJB9  ...        3\n","2  #oc-R11DNU2NBKQ23Z  ...        2\n","3  #oc-R11O5J5ZVQE25C  ...        3\n","4  #oc-R12KPBODL2B5ZD  ...        2\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":204}]},{"cell_type":"code","metadata":{"id":"k4ONSghRO00C","colab_type":"code","outputId":"bd8217d2-0bd5-4ee1-9fe3-7eacff5f0f3d","executionInfo":{"status":"ok","timestamp":1557942208422,"user_tz":-330,"elapsed":137950,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["display[display['UserId']=='AZY10LLTJ71NX']"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>UserId</th>\n","      <th>ProductId</th>\n","      <th>ProfileName</th>\n","      <th>Time</th>\n","      <th>Score</th>\n","      <th>Text</th>\n","      <th>COUNT(*)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>80638</th>\n","      <td>AZY10LLTJ71NX</td>\n","      <td>B006P7E5ZI</td>\n","      <td>undertheshrine \"undertheshrine\"</td>\n","      <td>1334707200</td>\n","      <td>5</td>\n","      <td>I was recommended to try green tea extract to ...</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              UserId  ... COUNT(*)\n","80638  AZY10LLTJ71NX  ...        5\n","\n","[1 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":205}]},{"cell_type":"code","metadata":{"id":"ZTS-B9hiO57h","colab_type":"code","outputId":"355b1ba8-ecb7-4849-dff5-084ce1961391","executionInfo":{"status":"ok","timestamp":1557942209058,"user_tz":-330,"elapsed":138561,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":459}},"source":["display= pd.read_sql_query(\"\"\"\n","SELECT *\n","FROM Reviews\n","WHERE Score != 3 AND UserId=\"AR5J8UI46CURR\"\n","ORDER BY ProductID\n","\"\"\", conn)\n","display.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>ProductId</th>\n","      <th>UserId</th>\n","      <th>ProfileName</th>\n","      <th>HelpfulnessNumerator</th>\n","      <th>HelpfulnessDenominator</th>\n","      <th>Score</th>\n","      <th>Time</th>\n","      <th>Summary</th>\n","      <th>Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>78445</td>\n","      <td>B000HDL1RQ</td>\n","      <td>AR5J8UI46CURR</td>\n","      <td>Geetha Krishnan</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1199577600</td>\n","      <td>LOACKER QUADRATINI VANILLA WAFERS</td>\n","      <td>DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>138317</td>\n","      <td>B000HDOPYC</td>\n","      <td>AR5J8UI46CURR</td>\n","      <td>Geetha Krishnan</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1199577600</td>\n","      <td>LOACKER QUADRATINI VANILLA WAFERS</td>\n","      <td>DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>138277</td>\n","      <td>B000HDOPYM</td>\n","      <td>AR5J8UI46CURR</td>\n","      <td>Geetha Krishnan</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1199577600</td>\n","      <td>LOACKER QUADRATINI VANILLA WAFERS</td>\n","      <td>DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>73791</td>\n","      <td>B000HDOPZG</td>\n","      <td>AR5J8UI46CURR</td>\n","      <td>Geetha Krishnan</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1199577600</td>\n","      <td>LOACKER QUADRATINI VANILLA WAFERS</td>\n","      <td>DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>155049</td>\n","      <td>B000PAQ75C</td>\n","      <td>AR5J8UI46CURR</td>\n","      <td>Geetha Krishnan</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1199577600</td>\n","      <td>LOACKER QUADRATINI VANILLA WAFERS</td>\n","      <td>DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Id  ...                                               Text\n","0   78445  ...  DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...\n","1  138317  ...  DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...\n","2  138277  ...  DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...\n","3   73791  ...  DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...\n","4  155049  ...  DELICIOUS WAFERS. I FIND THAT EUROPEAN WAFERS ...\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":206}]},{"cell_type":"code","metadata":{"id":"LxXduo_jPPh_","colab_type":"code","colab":{}},"source":["#Sorting data according to ProductId in ascending order\n","sorted_data=filtered_data.sort_values('ProductId', axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"cL7R5xtxPZrg","colab_type":"code","outputId":"1b199426-7628-4520-be8e-0209581a75cc","executionInfo":{"status":"ok","timestamp":1557942212737,"user_tz":-330,"elapsed":142206,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Deduplication of entries\n","final=sorted_data.drop_duplicates(subset={\"UserId\",\"ProfileName\",\"Time\",\"Text\"}, keep='first', inplace=False)\n","final.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(348262, 10)"]},"metadata":{"tags":[]},"execution_count":208}]},{"cell_type":"code","metadata":{"id":"mWukF7WJPcs5","colab_type":"code","outputId":"79e5d368-5ef1-43e5-96b6-a625c6ffafbd","executionInfo":{"status":"ok","timestamp":1557942212741,"user_tz":-330,"elapsed":142185,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Checking to see how much % of data still remains\n","(final['Id'].size*1.0)/(filtered_data['Id'].size*1.0)*100"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["69.6524"]},"metadata":{"tags":[]},"execution_count":209}]},{"cell_type":"code","metadata":{"id":"XT7vDUrTPfsK","colab_type":"code","colab":{}},"source":["final=final[final.HelpfulnessNumerator<=final.HelpfulnessDenominator]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"eEMbkzppPqMK","colab_type":"code","outputId":"9d187d24-31c2-41d2-bbd0-544853f02bcf","executionInfo":{"status":"ok","timestamp":1557942212750,"user_tz":-330,"elapsed":142156,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["#Before starting the next phase of preprocessing lets see the number of entries left\n","print(final.shape)\n","\n","#How many positive and negative reviews are present in our dataset?\n","final['Score'].value_counts()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["(348260, 10)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["1    293516\n","0     54744\n","Name: Score, dtype: int64"]},"metadata":{"tags":[]},"execution_count":211}]},{"cell_type":"code","metadata":{"id":"ToyYTS7UPvdF","colab_type":"code","colab":{}},"source":["# https://stackoverflow.com/a/47091490/4084039\n","import re\n","\n","def decontracted(phrase):\n","    # specific\n","    phrase = re.sub(r\"won't\", \"will not\", phrase)\n","    phrase = re.sub(r\"can\\'t\", \"can not\", phrase)\n","\n","    # general\n","    phrase = re.sub(r\"n\\'t\", \" not\", phrase)\n","    phrase = re.sub(r\"\\'re\", \" are\", phrase)\n","    phrase = re.sub(r\"\\'s\", \" is\", phrase)\n","    phrase = re.sub(r\"\\'d\", \" would\", phrase)\n","    phrase = re.sub(r\"\\'ll\", \" will\", phrase)\n","    phrase = re.sub(r\"\\'t\", \" not\", phrase)\n","    phrase = re.sub(r\"\\'ve\", \" have\", phrase)\n","    phrase = re.sub(r\"\\'m\", \" am\", phrase)\n","    return phrase"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tMS2jd7QP1KL","colab_type":"code","colab":{}},"source":["# https://gist.github.com/sebleier/554280\n","# we are removing the words from the stop words list: 'no', 'nor', 'not'\n","# <br /><br /> ==> after the above steps, we are getting \"br br\"\n","# we are including them into stop words list\n","# instead of <br /> if we have <br/> these tags would have revmoved in the 1st step\n","\n","stopwords= set(['br', 'the', 'i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\",\\\n","            \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', \\\n","            'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their',\\\n","            'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', \\\n","            'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', \\\n","            'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', \\\n","            'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after',\\\n","            'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further',\\\n","            'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more',\\\n","            'most', 'other', 'some', 'such', 'only', 'own', 'same', 'so', 'than', 'too', 'very', \\\n","            's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', \\\n","            've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn',\\\n","            \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn',\\\n","            \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", \\\n","            'won', \"won't\", 'wouldn', \"wouldn't\"])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"9Lj8uPBYP6La","colab_type":"code","outputId":"13fe61f5-9651-47c0-9559-03790f7ec668","executionInfo":{"status":"ok","timestamp":1557942356226,"user_tz":-330,"elapsed":285577,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["\n","from bs4 import BeautifulSoup\n","from tqdm import tqdm\n","preprocessed_reviews = []\n","# tqdm is for printing the status bar\n","for sentance in tqdm(final['Text'].values):\n","    sentance = re.sub(r\"http\\S+\", \"\", sentance)\n","    sentance = BeautifulSoup(sentance, 'lxml').get_text()\n","    sentance = decontracted(sentance)\n","    sentance = re.sub(\"\\S*\\d\\S*\", \"\", sentance).strip()\n","    sentance = re.sub('[^A-Za-z]+', ' ', sentance)\n","    # https://gist.github.com/sebleier/554280\n","    sentance = ' '.join(e.lower() for e in sentance.split() if e.lower() not in stopwords)\n","    preprocessed_reviews.append(sentance.strip())"],"execution_count":0,"outputs":[{"output_type":"stream","text":["100%|██████████| 348260/348260 [02:22<00:00, 2437.13it/s]\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"EFgrcbaQP9t8","colab_type":"code","outputId":"90f7ee90-0944-4513-8e2c-45febe6fadb8","executionInfo":{"status":"ok","timestamp":1557942356230,"user_tz":-330,"elapsed":285557,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["preprocessed_reviews[5]"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'great little book read aloud nice rhythm well good repetition little ones like lines chicken soup rice child gets go months year go wonderful places like bombay nile eating well know get eat kids maurice sendak version ice skating treat roses heads long time not even know came surprise came little witty book'"]},"metadata":{"tags":[]},"execution_count":215}]},{"cell_type":"code","metadata":{"id":"7xS9L36ZUaml","colab_type":"code","outputId":"aa465681-1004-487a-d404-986d8ab0f349","executionInfo":{"status":"ok","timestamp":1557942382267,"user_tz":-330,"elapsed":311568,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":105}},"source":["#BOW\n","bows=CountVectorizer()\n","bows.fit(preprocessed_reviews)\n","print(\"some of the features are\",bows.get_feature_names()[0:100])\n","final_counts = bows.transform(preprocessed_reviews)\n","print(\"the type of count vectorizer \",type(final_counts))\n","print(\"the shape of out text BOW vectorizer \",final_counts.get_shape())\n","print(\"the number of unique words \", final_counts.get_shape()[1])\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["some of the features are ['aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa', 'aaaaaaaaaaa', 'aaaaaaaaaaaa', 'aaaaaaaaaaaaa', 'aaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaargh', 'aaaaaaaaaaaaaaaaacccccccckkkkkk', 'aaaaaaaaagghh', 'aaaaaaah', 'aaaaaaahhhhhh', 'aaaaaaarrrrrggghhh', 'aaaaaah', 'aaaaaahhh', 'aaaaaahhhh', 'aaaaaahhhhh', 'aaaaaahhhhhyaaaaaa', 'aaaaaand', 'aaaaaawwwwwwwwww', 'aaaaah', 'aaaaahhhhhhhhhhhhhhhh', 'aaaaallll', 'aaaaawsome', 'aaaah', 'aaaahhhhhh', 'aaaahhhhhhhhhhh', 'aaaallll', 'aaaand', 'aaaannnnddd', 'aaaarrrrghh', 'aaagh', 'aaah', 'aaahhh', 'aaahhhhhh', 'aaahhhs', 'aaahs', 'aabout', 'aabsolutely', 'aachen', 'aachener', 'aacurate', 'aad', 'aadd', 'aadp', 'aadults', 'aaf', 'aafco', 'aafes', 'aafter', 'aagh', 'aagreen', 'aah', 'aahhed', 'aahhhs', 'aahing', 'aahs', 'aalmost', 'aaloo', 'aalouisiana', 'aamazon', 'aamzon', 'aana', 'aand', 'aanother', 'aany', 'aap', 'aardvark', 'aare', 'aargh', 'aaron', 'aarp', 'aarrgghhhh', 'aarrgh', 'aarthur', 'aarti', 'aas', 'aasanfood', 'aash', 'aauces', 'ab', 'aback', 'abalone', 'abalones', 'abamectin', 'abandned', 'abandoed', 'abandon', 'abandoned', 'abandoning', 'abandonment', 'abandons', 'abaolutely', 'abash', 'abated', 'abates']\n","the type of count vectorizer  <class 'scipy.sparse.csr.csr_matrix'>\n","the shape of out text BOW vectorizer  (348260, 113898)\n","the number of unique words  113898\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tK2o4U7SbrRY","colab_type":"code","outputId":"821692b4-bb5a-4f89-cfbe-c902606d2c2f","executionInfo":{"status":"ok","timestamp":1557942476991,"user_tz":-330,"elapsed":406270,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["tf_idf_vect = TfidfVectorizer(ngram_range=(1,2), min_df=10)\n","tf_idf_vect.fit(preprocessed_reviews)\n","print(\"some sample features(unique words in the corpus)\",tf_idf_vect.get_feature_names()[0:10])\n","print('='*50)\n","\n","final_tf_idf = tf_idf_vect.transform(preprocessed_reviews)\n","print(\"the type of count vectorizer \",type(final_tf_idf))\n","print(\"the shape of out text TFIDF vectorizer \",final_tf_idf.get_shape())\n","print(\"the number of unique words including both unigrams and bigrams \", final_tf_idf.get_shape()[1])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["some sample features(unique words in the corpus) ['aa', 'aaa', 'aaaaa', 'aaah', 'aafco', 'ab', 'aback', 'abandon', 'abandoned', 'abbey']\n","==================================================\n","the type of count vectorizer  <class 'scipy.sparse.csr.csr_matrix'>\n","the shape of out text TFIDF vectorizer  (348260, 194764)\n","the number of unique words including both unigrams and bigrams  194764\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Elw-k8LUpyO2","colab_type":"text"},"source":["## **Applying Navie Bayes on Amazon fine food reviews**"]},{"cell_type":"code","metadata":{"id":"N5fLedtpwODg","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split\n","\n","from sklearn.naive_bayes import MultinomialNB \n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import cross_val_score\n","from collections import Counter\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import cross_validate\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Fyq8Iu68psi2","colab_type":"code","outputId":"2c834802-5099-4dae-e7b2-420c05ad157d","executionInfo":{"status":"ok","timestamp":1557942477003,"user_tz":-330,"elapsed":406239,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["j=[]\n","for i in range(-5,6):\n","    a=10**i\n","    j.append(a)\n","print(j)\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000, 100000]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nMGgF71Mu4Vv","colab_type":"code","colab":{}},"source":["xnv_train,xnv_test, ynv_train,ynv_test=train_test_split(final_counts,final[\"Score\"],test_size=0.3)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"grtIu5F316IE","colab_type":"code","outputId":"725d2e44-14d1-43b0-fbe4-c562e3bc7e98","executionInfo":{"status":"ok","timestamp":1557942477396,"user_tz":-330,"elapsed":406598,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["ynv_train.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(243782,)"]},"metadata":{"tags":[]},"execution_count":221}]},{"cell_type":"code","metadata":{"id":"MdAGlrJOxlBd","colab_type":"code","colab":{}},"source":["x_tr,x_cv,y_tr,y_cv=train_test_split(xnv_train,ynv_train,test_size=0.3)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jRjb5l60yz5g","colab_type":"code","outputId":"b066923a-2458-47cf-a33b-e1a42f329ce5","executionInfo":{"status":"ok","timestamp":1557942479865,"user_tz":-330,"elapsed":409033,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["cv_sc=[]\n","for k in j:\n","    NB=MultinomialNB(alpha=k,class_prior=None,fit_prior=True)\n","    NB.fit(x_tr,y_tr)\n","    pred=NB.predict(x_cv)\n","    acc=accuracy_score(y_cv,pred,normalize=True)*float(100)\n","    cv_sc.append(acc)\n","    print(\"accuracy scores of alpha =%f is %f%%\"%(k,acc))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["accuracy scores of alpha =0.000010 is 89.364873%\n","accuracy scores of alpha =0.000100 is 89.519382%\n","accuracy scores of alpha =0.001000 is 89.680727%\n","accuracy scores of alpha =0.010000 is 89.911807%\n","accuracy scores of alpha =0.100000 is 90.110070%\n","accuracy scores of alpha =1.000000 is 90.836125%\n","accuracy scores of alpha =10.000000 is 85.097423%\n","accuracy scores of alpha =100.000000 is 84.296165%\n","accuracy scores of alpha =1000.000000 is 84.303001%\n","accuracy scores of alpha =10000.000000 is 84.303001%\n","accuracy scores of alpha =100000.000000 is 84.303001%\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tGDcuXnv3oZl","colab_type":"code","outputId":"e7e87c41-c397-4085-b3cb-7ef334fe1943","executionInfo":{"status":"ok","timestamp":1557942479869,"user_tz":-330,"elapsed":409014,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["nb=MultinomialNB(alpha=1)\n","NB.fit(x_tr,y_tr)\n","pred=NB.predict(xnv_test)\n","acc=accuracy_score(ynv_test,pred,normalize=True)*float(100)\n","print(\"the accuracy score for alpha=1 is\",acc)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["the accuracy score for alpha=1 is 84.26367273492984\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"h_4lKh3s58Xs","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import GridSearchCV    "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ts7O7r0l77ui","colab_type":"code","outputId":"5e7c8d27-07ec-4419-cf29-3160bf212f4b","executionInfo":{"status":"ok","timestamp":1557942479878,"user_tz":-330,"elapsed":408987,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["parameters=dict(alpha=j)\n","print(parameters)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'alpha': [1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000, 100000]}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nhMm5P6H8QIX","colab_type":"code","colab":{}},"source":["NBG=MultinomialNB()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"a7i0FjjL8o9E","colab_type":"code","colab":{}},"source":["gridcv=GridSearchCV(NBG,parameters,scoring='accuracy',cv=10,return_train_score=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YjiEHMH5888e","colab_type":"code","outputId":"cb735f33-5982-458c-dc5d-1f0816d5c4c8","executionInfo":{"status":"ok","timestamp":1557942506155,"user_tz":-330,"elapsed":435215,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["gridcv.fit(x_tr, y_tr)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=10, error_score='raise-deprecating',\n","       estimator=MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True),\n","       fit_params=None, iid='warn', n_jobs=None,\n","       param_grid={'alpha': [1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000, 100000]},\n","       pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n","       scoring='accuracy', verbose=0)"]},"metadata":{"tags":[]},"execution_count":229}]},{"cell_type":"code","metadata":{"id":"lVE15nXY9Ggf","colab_type":"code","outputId":"95fa03b9-c000-4858-b9d6-01eb92206b73","executionInfo":{"status":"ok","timestamp":1557942506161,"user_tz":-330,"elapsed":435201,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["print(gridcv.best_score_)\n","print(gridcv.best_params_)\n","print(gridcv.best_estimator_)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["0.9071650834764162\n","{'alpha': 1}\n","MultinomialNB(alpha=1, class_prior=None, fit_prior=True)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rXQjNQMQCWdi","colab_type":"code","colab":{}},"source":["nb_model=MultinomialNB(alpha=1,class_prior=None,fit_prior=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1exJlz49DOIM","colab_type":"code","outputId":"72fd6ea6-4a7f-481c-d422-5045380ffcfd","executionInfo":{"status":"ok","timestamp":1557942506169,"user_tz":-330,"elapsed":435173,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["nb_model.fit(x_tr,y_tr)\n","preds=nb_model.predict(xnv_test)\n","accur=accuracy_score(ynv_test,preds,normalize=True)*float(100)\n","print(\"accuracy score for alpha =1 is \",acc)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["accuracy score for alpha =1 is  84.26367273492984\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lm01p64YEOGS","colab_type":"text"},"source":["## Plotting CM"]},{"cell_type":"code","metadata":{"id":"KqoOc_PQEHch","colab_type":"code","outputId":"a672d7bb-2339-46b0-8e45-de92dbaa820c","executionInfo":{"status":"ok","timestamp":1557942506172,"user_tz":-330,"elapsed":435159,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"source":["cm=confusion_matrix(preds,ynv_test)\n","import seaborn as sns\n","cm=sns.heatmap(cm,annot=True,fmt='d',cmap='BuGn')"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"I5k5trMqz64E","colab_type":"text"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"cLnPaUzhstAu","colab_type":"text"},"source":["## plotting ROC"]},{"cell_type":"code","metadata":{"id":"Yjc_f2zmEd-t","colab_type":"code","colab":{}},"source":["false_positive_rate,true_positive_rate,thresolds=roc_curve(ynv_test,preds)\n","roc_auc=auc(false_positive_rate,true_positive_rate)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"pY9I_Sa8Fcum","colab_type":"code","outputId":"3ca2f1c9-1d15-4033-ce18-9090bd919a06","executionInfo":{"status":"ok","timestamp":1557942507085,"user_tz":-330,"elapsed":436042,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":295}},"source":["plt.title('Receiver Operating Characteristic')\n","plt.plot(false_positive_rate, true_positive_rate, 'b',\n","label='AUC = %0.2f'% roc_auc)\n","plt.legend(loc='lower right')\n","plt.ylabel('True Positive Rate')\n","plt.xlabel('False Positive Rate')\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"4q6f2JS0s7CQ","colab_type":"text"},"source":["## Feature Importance"]},{"cell_type":"code","metadata":{"id":"QrpFqAv6H9tt","colab_type":"code","outputId":"5ac3d8e2-9c6e-4870-c44b-f8cde3da3230","executionInfo":{"status":"ok","timestamp":1557943621293,"user_tz":-330,"elapsed":1122,"user":{"displayName":"amar latchireddy","photoUrl":"https://lh5.googleusercontent.com/-pH8ZOQmpyI8/AAAAAAAAAAI/AAAAAAAAAMM/WipM_OUqHsY/s64/photo.jpg","userId":"05389231540303134539"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["neg_class_prob_sorted = nb_model.feature_log_prob_[0, :].argsort()\n","pos_class_prob_sorted = nb_model.feature_log_prob_[1, :].argsort()\n","\n","print(np.take(bows.get_feature_names(), neg_class_prob_sorted[:10]))\n","print(np.take(bows.get_feature_names(), pos_class_prob_sorted[:10]))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["['lf' 'oilbefore' 'oilbake' 'oilauthor' 'oilat' 'oiland' 'oilall'\n"," 'oilaftertaste' 'oiladd' 'oila']\n","['zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz' 'unmilled' 'exstatic'\n"," 'tacoyaki' 'extactly' 'extacy' 'olvie' 'olsteadhaving' 'unmet' 'tacrine']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FabZPsd1aRN4","colab_type":"code","colab":{}},"source":["\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bK9KWDaOUGhu","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}